// Import Flutter framework р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕гр╣Йр╕▓р╕З UI
import 'package:flutter/material.dart';

// Import р╕Ър╕гр╕┤р╕Бр╕▓р╕г authentication
import '../services/auth_service.dart';

/// ЁЯУЭ р╕лр╕Щр╣Йр╕▓р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б KU Planner
///
/// StatefulWidget р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Гр╕лр╕бр╣И
/// - р╣Бр╕кр╕Фр╕Зр╕Шр╕╡р╕б KU Planner р╕Юр╕гр╣Йр╕нр╕бр╣Вр╕ер╣Вр╕Бр╣Й
/// - р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Кр╕╖р╣Ир╕н, р╕нр╕╡р╣Ар╕бр╕е, р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
/// - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕Зр╕Вр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е
/// - р╣Ар╕гр╕╡р╕вр╕Б AuthService р╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕гр╣Йр╕▓р╕Зр╕Ър╕▒р╕Нр╕Кр╕╡р╣Гр╕лр╕бр╣И
/// - р╕Щр╕│р╕Чр╕▓р╕Зр╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ър╣Ар╕бр╕╖р╣Ир╕нр╕кр╕│р╣Ар╕гр╣Зр╕И
class SignupPage extends StatefulWidget {
  const SignupPage({super.key});

  @override
  State<SignupPage> createState() => _SignupPageState();
}

class _SignupPageState extends State<SignupPage> {
  // Controllers р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щр╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Б
  final nameCtrl = TextEditingController(); // р╕Хр╕▒р╕зр╕Др╕зр╕Ър╕Др╕╕р╕бр╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕н
  final emailCtrl = TextEditingController(); // р╕Хр╕▒р╕зр╕Др╕зр╕Ър╕Др╕╕р╕бр╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕нр╕╡р╣Ар╕бр╕е
  final passCtrl = TextEditingController(); // р╕Хр╕▒р╕зр╕Др╕зр╕Ър╕Др╕╕р╕бр╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
  final confirmCtrl = TextEditingController(); // р╕Хр╕▒р╕зр╕Др╕зр╕Ър╕Др╕╕р╕бр╕Кр╣Ир╕нр╕Зр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ

  // Service р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
  final AuthService _authService = AuthService();

  // р╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╣Вр╕лр╕ер╕Ф (р╣Бр╕кр╕Фр╕З loading indicator)
  bool _isLoading = false;

  /// ЁЯУЭ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
  ///
  /// р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╣Бр╕ер╕░р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
  /// р╕кр╕гр╣Йр╕▓р╕Зр╕Ър╕▒р╕Нр╕Кр╕╡р╣Гр╕лр╕бр╣Ир╕Ьр╣Ир╕▓р╕Щ AuthService
  void _signUp() async {
    // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╣Бр╕ер╕░р╕ер╕Ър╕Кр╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕З
    final name = nameCtrl.text.trim();
    final email = emailCtrl.text.trim();
    final pass = passCtrl.text.trim();
    final confirm = confirmCtrl.text.trim();

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
    if (name.isEmpty || email.isEmpty || pass.isEmpty || confirm.isEmpty) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕лр╣Йр╕Др╕гр╕Ър╕Чр╕╕р╕Бр╕Кр╣Ир╕нр╕З"),
          backgroundColor: Colors.red,
        ),
      );
      return; // р╕лр╕вр╕╕р╕Фр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ
    }

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╕гр╕Зр╕Бр╕▒р╕Щр╕лр╕гр╕╖р╕нр╣Др╕бр╣И
    if (pass != confirm) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Хр╕гр╕Зр╕Бр╕▒р╕Щ"),
          backgroundColor: Colors.red,
        ),
      );
      return; // р╕лр╕вр╕╕р╕Фр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ
    }

    // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Др╕зр╕▓р╕бр╕вр╕▓р╕зр╕Вр╕нр╕Зр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
    if (pass.length < 6) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╣Йр╕нр╕Зр╕бр╕╡р╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 6 р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕г"),
          backgroundColor: Colors.red,
        ),
      );
      return; // р╕лр╕вр╕╕р╕Фр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щ
    }

    // р╣Бр╕кр╕Фр╕З loading indicator
    setState(() {
      _isLoading = true;
    });

    try {
      // р╣Ар╕гр╕╡р╕вр╕Б service р╣Ар╕Юр╕╖р╣Ир╕нр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
      final success = await _authService.register(name, email, pass);

      // р╕Цр╣Йр╕▓р╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Бр╕ер╕░ widget р╕вр╕▒р╕Зр╕Др╕Зр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕лр╕Щр╣Йр╕▓р╕Ир╕н
      if (success) {
        if (mounted) {
          // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              content: Text("р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕кр╕│р╣Ар╕гр╣Зр╕И! ЁЯОЙ"),
              backgroundColor: Colors.green,
            ),
          );
          // р╕Щр╕│р╕Чр╕▓р╕Зр╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
          Navigator.pushReplacementNamed(context, '/login');
        }
      }
      // р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕Ир╣Бр╕ер╕░ widget р╕вр╕▒р╕Зр╕Др╕Зр╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕лр╕Щр╣Йр╕▓р╕Ир╕н
      else {
        if (mounted) {
          // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(
              content: Text("р╕нр╕╡р╣Ар╕бр╕ер╕Щр╕╡р╣Йр╕Цр╕╣р╕Бр╣Гр╕Кр╣Йр╣Бр╕ер╣Йр╕з р╕Бр╕гр╕╕р╕Ур╕▓р╣Гр╕Кр╣Йр╕нр╕╡р╣Ар╕бр╕ер╕нр╕╖р╣Ир╕Щ"),
              backgroundColor: Colors.red,
            ),
          );
        }
      }
    }
    // р╕Ир╕▒р╕Фр╕Бр╕▓р╕г error р╕Чр╕╡р╣Ир╕нр╕▓р╕Ир╣Ар╕Бр╕┤р╕Фр╕Вр╕╢р╣Йр╕Щ
    catch (e) {
      if (mounted) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text("р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: $e"),
            backgroundColor: Colors.red,
          ),
        );
      }
    }
    // р╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Фр╣Ар╕кр╕бр╕н (р╕Лр╣Ир╕нр╕Щ loading indicator)
    finally {
      if (mounted) {
        setState(() {
          _isLoading = false;
        });
      }
    }
  }

  /// р╕кр╕гр╣Йр╕▓р╕З UI р╕Вр╕нр╕Зр╕лр╕Щр╣Йр╕▓р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б KU Planner
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color.fromARGB(
        255,
        255,
        255,
        255,
      ), // р╕кр╕╡р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕Вр╕▓р╕з
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(20.0), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕Зр╕Ир╕▓р╕Бр╕Вр╕нр╕Ъ 20 pixels
          child: Column(
            mainAxisSize: MainAxisSize.min, // р╣Гр╕Кр╣Йр╕Юр╕╖р╣Йр╕Щр╕Чр╕╡р╣Ир╕Щр╣Йр╕нр╕вр╕Чр╕╡р╣Ир╕кр╕╕р╕Ф
            children: [
              // ЁЯОи р╣Вр╕ер╣Вр╕Бр╣Й KU - р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕гр╕Вр╕Щр╕▓р╕Фр╣Гр╕лр╕Нр╣И
              const Text(
                "KU",
                style: TextStyle(
                  fontSize: 170, // р╕Вр╕Щр╕▓р╕Фр╕Яр╕нр╕Щр╕Хр╣М 170
                  fontWeight: FontWeight.bold, // р╕Хр╕▒р╕зр╕лр╕Щр╕▓
                  color: Color(0xff006866), // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╣Ар╕Вр╣Йр╕б KU
                  height: 0.9, // р╕Др╕зр╕▓р╕бр╕кр╕╣р╕Зр╕Вр╕нр╕Зр╕Ър╕гр╕гр╕Чр╕▒р╕Ф
                ),
              ),
              const SizedBox(height: 10), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 10 pixels
              // ЁЯУП р╣Бр╕Цр╕Ър╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╕нр╣Ир╕нр╕Щ KU
              Container(
                width: 230, // р╕Бр╕зр╣Йр╕▓р╕З 230 pixels
                height: 30, // р╕кр╕╣р╕З 30 pixels
                color: const Color(0xffb2bb1f), // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╕нр╣Ир╕нр╕Щ KU
              ),
              const SizedBox(height: 10), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 10 pixels
              // ЁЯП╖я╕П р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б "PLANER"
              const Text(
                "PLANER",
                style: TextStyle(
                  fontSize: 30, // р╕Вр╕Щр╕▓р╕Фр╕Яр╕нр╕Щр╕Хр╣М 30
                  fontWeight: FontWeight.w900, // р╕Хр╕▒р╕зр╕лр╕Щр╕▓р╕бр╕▓р╕Б
                  color: Color(0xff006866), // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╣Ар╕Вр╣Йр╕б KU
                ),
              ),
              const SizedBox(height: 24), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 24 pixels
              // ЁЯСд р╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕н
              TextField(
                controller: nameCtrl, // р╣Гр╕Кр╣Й controller р╕Чр╕╡р╣Ир╕кр╕гр╣Йр╕▓р╕Зр╣Др╕зр╣Й
                decoration: InputDecoration(
                  labelText: "Name", // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕кр╕Фр╕Зр╣Гр╕Щ label
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(50), // р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ 50
                  ),
                ),
              ),
              const SizedBox(height: 24), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 24 pixels
              // ЁЯУз р╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕нр╕╡р╣Ар╕бр╕е
              TextField(
                controller: emailCtrl, // р╣Гр╕Кр╣Й controller р╕Чр╕╡р╣Ир╕кр╕гр╣Йр╕▓р╕Зр╣Др╕зр╣Й
                decoration: InputDecoration(
                  labelText: "Enter Email", // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕кр╕Фр╕Зр╣Гр╕Щ label
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(50), // р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ 50
                  ),
                ),
              ),
              const SizedBox(height: 24), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 24 pixels
              // ЁЯФТ р╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
              TextField(
                controller: passCtrl, // р╣Гр╕Кр╣Й controller р╕Чр╕╡р╣Ир╕кр╕гр╣Йр╕▓р╕Зр╣Др╕зр╣Й
                obscureText: true, // р╕Лр╣Ир╕нр╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б (р╣Бр╕кр╕Фр╕Зр╣Ар╕Ыр╣Зр╕Щ dots)
                decoration: InputDecoration(
                  labelText: "Enter Password", // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕кр╕Фр╕Зр╣Гр╕Щ label
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(50), // р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ 50
                  ),
                ),
              ),
              const SizedBox(height: 24), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 24 pixels
              // ЁЯФР р╕Кр╣Ир╕нр╕Зр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
              TextField(
                controller: confirmCtrl, // р╣Гр╕Кр╣Й controller р╕Чр╕╡р╣Ир╕кр╕гр╣Йр╕▓р╕Зр╣Др╕зр╣Й
                obscureText: true, // р╕Лр╣Ир╕нр╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б (р╣Бр╕кр╕Фр╕Зр╣Ар╕Ыр╣Зр╕Щ dots)
                decoration: InputDecoration(
                  labelText: "Confirm Password", // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Бр╕кр╕Фр╕Зр╣Гр╕Щ label
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(50), // р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ 50
                  ),
                ),
              ),
              const SizedBox(height: 24), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 24 pixels
              // ЁЯУЭ р╕Ыр╕╕р╣Ир╕бр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б
              ElevatedButton(
                onPressed: _isLoading ? null : _signUp, // р╕Цр╣Йр╕▓р╕Бр╕│р╕ер╕▒р╕Зр╣Вр╕лр╕ер╕Ф р╕лр╣Йр╕▓р╕бр╕Бр╕Ф
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xff006866), // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╣Ар╕Вр╣Йр╕б KU
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(50), // р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ 50
                  ),
                  padding: const EdgeInsets.symmetric(
                    horizontal: 150, // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕Зр╕Лр╣Йр╕▓р╕в-р╕Вр╕зр╕▓ 150 pixels
                    vertical: 14, // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕Зр╕Ър╕Щ-р╕ер╣Ир╕▓р╕З 14 pixels
                  ),
                ),
                child: _isLoading
                    ? // р╣Бр╕кр╕Фр╕З loading indicator р╕Вр╕Ур╕░р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е
                      const Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          SizedBox(
                            width: 16,
                            height: 16,
                            child: CircularProgressIndicator(
                              strokeWidth: 2, // р╕Др╕зр╕▓р╕бр╕лр╕Щр╕▓р╕Вр╕нр╕Зр╕зр╕Зр╕Бр╕ер╕б 2
                              valueColor: AlwaysStoppedAnimation<Color>(
                                Colors.white, // р╕кр╕╡р╕Вр╕▓р╕з
                              ),
                            ),
                          ),
                          SizedBox(width: 8), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 8 pixels
                          Text(
                            "р╕Бр╕│р╕ер╕▒р╕Зр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б...",
                            style: TextStyle(fontSize: 15, color: Colors.white),
                          ),
                        ],
                      )
                    : // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕Бр╕Хр╕┤
                      const Text(
                        "SIGN UP",
                        style: TextStyle(fontSize: 15, color: Colors.white),
                      ),
              ),
              const SizedBox(height: 24), // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕З 24 pixels
              // ЁЯФЧ р╕Ыр╕╕р╣Ир╕бр╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
              ElevatedButton(
                onPressed: () {
                  Navigator.pushReplacementNamed(
                    context,
                    '/login',
                  ); // р╣Др╕Ыр╕лр╕Щр╣Йр╕▓р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color.fromARGB(
                    255,
                    255,
                    255,
                    255,
                  ), // р╕кр╕╡р╕Вр╕▓р╕з
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(50), // р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ 50
                  ),
                  padding: const EdgeInsets.symmetric(
                    horizontal: 150, // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕Зр╕Лр╣Йр╕▓р╕в-р╕Вр╕зр╕▓ 150 pixels
                    vertical: 14, // р╕гр╕░р╕вр╕░р╕лр╣Ир╕▓р╕Зр╕Ър╕Щ-р╕ер╣Ир╕▓р╕З 14 pixels
                  ),
                ),
                child: const Text(
                  "SIGN IN",
                  style: TextStyle(
                    fontSize: 15,
                    color: Color(0xff006866),
                  ), // р╕кр╕╡р╣Ар╕Вр╕╡р╕вр╕зр╣Ар╕Вр╣Йр╕б KU
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
